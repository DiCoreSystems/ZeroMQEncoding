// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: ID.capnp

#include "ID.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<46> b_db5d1b772dc860ab = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    171,  96, 200,  45, 119,  27,  93, 219,
      9,   0,   0,   0,   1,   0,   1,   0,
    190, 251, 215, 215, 148, 230, 200, 241,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,  68,  46,  99,  97, 112, 110, 112,
     58,  73,  68,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     40, 108, 174,  69, 222,  70,  49, 141,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_db5d1b772dc860ab = b_db5d1b772dc860ab.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_db5d1b772dc860ab[] = {
  &s_8d3146de45ae6c28,
};
static const uint16_t m_db5d1b772dc860ab[] = {1, 0};
static const uint16_t i_db5d1b772dc860ab[] = {0, 1};
const ::capnp::_::RawSchema s_db5d1b772dc860ab = {
  0xdb5d1b772dc860ab, b_db5d1b772dc860ab.words, 46, d_db5d1b772dc860ab, m_db5d1b772dc860ab,
  1, 2, i_db5d1b772dc860ab, nullptr, nullptr, { &s_db5d1b772dc860ab, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<29> b_8d3146de45ae6c28 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     40, 108, 174,  69, 222,  70,  49, 141,
      9,   0,   0,   0,   2,   0,   0,   0,
    190, 251, 215, 215, 148, 230, 200, 241,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,  68,  46,  99,  97, 112, 110, 112,
     58,  73,  68,  84, 121, 112, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116, 101, 103, 101, 114,   0,
    119, 105, 108, 100,  99,  97, 114, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 117, 105, 100,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8d3146de45ae6c28 = b_8d3146de45ae6c28.words;
#if !CAPNP_LITE
static const uint16_t m_8d3146de45ae6c28[] = {0, 2, 1};
const ::capnp::_::RawSchema s_8d3146de45ae6c28 = {
  0x8d3146de45ae6c28, b_8d3146de45ae6c28.words, 29, nullptr, m_8d3146de45ae6c28,
  0, 3, nullptr, nullptr, nullptr, { &s_8d3146de45ae6c28, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(IDType_8d3146de45ae6c28, 8d3146de45ae6c28);
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace capnzero {

// ID
constexpr uint16_t ID::_capnpPrivate::dataWordSize;
constexpr uint16_t ID::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ID::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ID::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

