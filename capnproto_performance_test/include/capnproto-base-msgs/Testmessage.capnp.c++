// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Testmessage.capnp

#include "Testmessage.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<48> b_a69e4164f909b46a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    106, 180,   9, 249, 100,  65, 158, 166,
     18,   0,   0,   0,   1,   0,   1,   0,
    103,   6,  81, 213,  84,  60, 105, 217,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 101, 115, 116, 109, 101, 115, 115,
     97, 103, 101,  46,  99,  97, 112, 110,
    112,  58,  84, 101, 115, 116, 109, 101,
    115, 115,  97, 103, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 121, 108, 111,  97, 100,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a69e4164f909b46a = b_a69e4164f909b46a.words;
#if !CAPNP_LITE
static const uint16_t m_a69e4164f909b46a[] = {1, 0};
static const uint16_t i_a69e4164f909b46a[] = {0, 1};
const ::capnp::_::RawSchema s_a69e4164f909b46a = {
  0xa69e4164f909b46a, b_a69e4164f909b46a.words, 48, nullptr, m_a69e4164f909b46a,
  0, 2, i_a69e4164f909b46a, nullptr, nullptr, { &s_a69e4164f909b46a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace capnzero {

// Testmessage
constexpr uint16_t Testmessage::_capnpPrivate::dataWordSize;
constexpr uint16_t Testmessage::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Testmessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Testmessage::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

