// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: string.capnp

#include "string.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<49> b_ff46b507b3665c0b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     11,  92, 102, 179,   7, 181,  70, 255,
     13,   0,   0,   0,   1,   0,   1,   0,
    103,   6,  81, 213,  84,  60, 105, 217,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 105, 110, 103,  46,  99,
     97, 112, 110, 112,  58,  67,  97, 112,
    110, 112, 114, 111, 116, 111, 112, 101,
    114, 102, 111, 114, 109,  97, 110,  99,
    101, 116, 101, 115, 116,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 116, 114, 105, 110, 103,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 117, 109,  98, 101, 114,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ff46b507b3665c0b = b_ff46b507b3665c0b.words;
#if !CAPNP_LITE
static const uint16_t m_ff46b507b3665c0b[] = {1, 0};
static const uint16_t i_ff46b507b3665c0b[] = {0, 1};
const ::capnp::_::RawSchema s_ff46b507b3665c0b = {
  0xff46b507b3665c0b, b_ff46b507b3665c0b.words, 49, nullptr, m_ff46b507b3665c0b,
  0, 2, i_ff46b507b3665c0b, nullptr, nullptr, { &s_ff46b507b3665c0b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace capnproto {

// Capnprotoperformancetest
constexpr uint16_t Capnprotoperformancetest::_capnpPrivate::dataWordSize;
constexpr uint16_t Capnprotoperformancetest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Capnprotoperformancetest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Capnprotoperformancetest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

