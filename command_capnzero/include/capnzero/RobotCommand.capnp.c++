// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: RobotCommand.capnp

#include "RobotCommand.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<52> b_f8452cdd571622ef = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    239,  34,  22,  87, 221,  44,  69, 248,
     19,   0,   0,   0,   1,   0,   1,   0,
     22,  36, 187,  57, 141,  57, 247, 192,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     82, 111,  98, 111, 116,  67, 111, 109,
    109,  97, 110, 100,  46,  99,  97, 112,
    110, 112,  58,  82, 111,  98, 111, 116,
     67, 111, 109, 109,  97, 110, 100,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     89, 131,  48, 243,  88,  52, 122, 141,
      1,   0,   0,   0,  34,   0,   0,   0,
     67, 109, 100,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    114, 101,  99, 101, 105, 118, 101, 114,
     73,  68,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    171,  96, 200,  45, 119,  27,  93, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 109,  97, 110, 100,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     89, 131,  48, 243,  88,  52, 122, 141,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f8452cdd571622ef = b_f8452cdd571622ef.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f8452cdd571622ef[] = {
  &s_8d7a3458f3308359,
  &s_db5d1b772dc860ab,
};
static const uint16_t m_f8452cdd571622ef[] = {1, 0};
static const uint16_t i_f8452cdd571622ef[] = {0, 1};
const ::capnp::_::RawSchema s_f8452cdd571622ef = {
  0xf8452cdd571622ef, b_f8452cdd571622ef.words, 52, d_f8452cdd571622ef, m_f8452cdd571622ef,
  2, 2, i_f8452cdd571622ef, nullptr, nullptr, { &s_f8452cdd571622ef, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<27> b_8d7a3458f3308359 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     89, 131,  48, 243,  88,  52, 122, 141,
     32,   0,   0,   0,   2,   0,   0,   0,
    239,  34,  22,  87, 221,  44,  69, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     82, 111,  98, 111, 116,  67, 111, 109,
    109,  97, 110, 100,  46,  99,  97, 112,
    110, 112,  58,  82, 111,  98, 111, 116,
     67, 111, 109, 109,  97, 110, 100,  46,
     67, 109, 100,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 114, 116,   0,   0,   0,
    115, 116, 111, 112,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8d7a3458f3308359 = b_8d7a3458f3308359.words;
#if !CAPNP_LITE
static const uint16_t m_8d7a3458f3308359[] = {0, 1};
const ::capnp::_::RawSchema s_8d7a3458f3308359 = {
  0x8d7a3458f3308359, b_8d7a3458f3308359.words, 27, nullptr, m_8d7a3458f3308359,
  0, 2, nullptr, nullptr, nullptr, { &s_8d7a3458f3308359, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Cmd_8d7a3458f3308359, 8d7a3458f3308359);
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace capnzero {

// RobotCommand
constexpr uint16_t RobotCommand::_capnpPrivate::dataWordSize;
constexpr uint16_t RobotCommand::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind RobotCommand::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RobotCommand::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

